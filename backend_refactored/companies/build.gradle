/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java-library'
}

group = 'org.utils'
version = '0.0.1-SNAPSHOT'


repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    // for jackson serialization
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.2'
    // for jackson time serialization
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.18.2'

    // for jackarta validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.4.2'

    // for mongodb as a database
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '3.4.1'

    // for jsonpath: verifying and querying Json strings / objects
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.9.0'



    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
    // for junit: https://docs.gradle.org/current/userguide/java_testing.html
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//    implementation project(':utils')
    implementation project(':access')

}


tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}


tasks.named('test') {
    useJUnitPlatform()
}
