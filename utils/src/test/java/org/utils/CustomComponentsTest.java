/*
 * This source file was generated by the Gradle 'init' task
 */
package org.utils;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class CustomComponentsTest {
    private final CustomGenerator customGenerator = new CustomGenerator();

    @Test
    void testCustomGenerateIdOrder1() {
        int asciiOfA = 'a';

        for (int i = 0; i <= 25; i++) {
            char c = (char) (asciiOfA + i);
            String id = customGenerator.generateId(i);
            assertEquals(Character.toString(c), id, "the id generation does not work for one number from 0 to 25");
        }

    }

    @Test
    void testCustomGenerateIdOrder2() {
        int asciiOfA = 'a';


        int i1 = 10;
        int i2 = 4;

        for (int j = 1; j <= 25; j++) {
            int order = 26 * j + i1;
            String id = customGenerator.generateId(order);
            char c1 = (char) (asciiOfA + j);

            char c2 = (char) (asciiOfA + i1);
            assertEquals(c1 + Character.toString(c2), id);

            order = 26 * j + i2;
            id = customGenerator.generateId(order);
            char c3 = (char) (asciiOfA + i2);
            assertEquals(c1 + Character.toString(c3), id);
        }
    }

    @Test
    void testCustomerGeneratorPowers26() {
        for (int i = 1; i <= 6; i++) {
            long power26 = (long) Math.pow(26, i);
            assertEquals(i, customGenerator.verify_power_26(power26), "The calculation of the logarithm is wrong");

            String id = customGenerator.generateId(power26);
            String realId = "a".repeat(i + 1);
            assertEquals(realId, id, "it does not work with powers of 26...");
        }
    }
}
